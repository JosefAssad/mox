from enum import Enum

import psycopg2
from jinja2 import Template


def get_authenticated_user():
    """Return hardcoded UUID until we get real authentication in place."""
    return "615957e8-4aa1-4319-a787-f1f7ad6b5e2c"


class Livscyklus(Enum):
    OPSTAAET = 'Opstaaet'
    IMPORTERET = 'Importeret'
    PASSIVERET = 'Passiveret'
    SLETTET = 'Slettet'
    RETTET = 'Rettet'


def create_facet(note, attributes, states, relations): 
    """Create a new facet by calling the stored procedure.

    Create a new facet by calling actual_state_create_or_import_facet. It is
    necessary to map the parameters to our custom PostgreSQL data types.
    """

    # Data from the BaseRegistration.
    # Do not supply date, is generated by DB.
    life_cycle_code = Livscyklus.OPSTAAET.value
    user_ref = get_authenticated_user()

    with open('templates/sql/create_facet.sql', 'r') as f:
        data = f.read()
    sql_template = Template(data)
    sql = sql_template.render(
            life_cycle_code=life_cycle_code,
            user_ref=user_ref,
            note=note,
            states=states,
            attributes=attributes,
            relations=relations)
    print sql
    return sql

    



    

